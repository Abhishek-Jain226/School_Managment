package com.app.entity;

import java.time.LocalDateTime;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Lob;
import jakarta.persistence.PrePersist;
import jakarta.persistence.PreUpdate;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "school")
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class School {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "school_id")
	private Integer schoolId;

	@Column(nullable = false, unique = true, length = 50)
	private String schoolCode; // Can be autogenerated

	@Column(nullable = false, length = 200)
	private String schoolName;

	@Column(length = 100)
	private String schoolType;

	@Column(length = 100)
	private String affiliationBoard;

	@Column(length = 100)
	private String registrationNumber;

	@Column(length = 300)
	private String address;

	@Column(length = 100)
	private String city;

	@Column(length = 100)
	private String district;

	@Column(length = 100)
	private String state;

	@Column(length = 20)
	private String pincode;

	@Column(length = 20)
	private String contactNo;

	@Column(length = 150)
	private String email;

	@Lob
	@Column(name = "school_photo", columnDefinition = "LONGTEXT")
	private String schoolPhoto;

	@Column(name = "is_active", nullable = false)
	private Boolean isActive;

	@Column(name = "created_by", length = 50)
	private String createdBy;
	@Column(name = "created_date", updatable = false)
	private LocalDateTime createdDate;
	@Column(name = "updated_by", length = 50)
	private String updatedBy;
	@Column(name = "updated_date")
	private LocalDateTime updatedDate;

	@PrePersist
	protected void onCreate() {
		createdDate = LocalDateTime.now();
	}

	@PreUpdate
	protected void onUpdate() {
		updatedDate = LocalDateTime.now();
	}
	
	// Explicit getters for critical methods (Lombok fallback)
	public Integer getSchoolId() {
		return schoolId;
	}
	
	public String getSchoolName() {
		return schoolName;
	}
}
